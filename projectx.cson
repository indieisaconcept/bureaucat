{
    # Project's human readable name
    title: "Projectz"

    # Project slug name
    name: "projectz"

    # Project GitHub repository full name
    # If `repository` is set, or if `homepage` is a GitHub URL, we set this automatically
    repo: "bevry/projectz"

    # Project's homepage URL
    # If `repo`, `repository`, or `demo` is set, we set this automatically
    homepage: "https://github.com/bevry/projectz"

    # Project's demo URL
    # If `homepage` or  is set, we set this automatically
    demo: "https://github.com/bevry/projectz"

    # Project description
    description: "Stop wasting time syncing and updating your project's README and Package Files!"

    # Project keywords
    # Can be an array or CSV string
    keywords: "a, b, c"

    # Project's author details
    # Can be an array or CSV string
    authors: ["2013+ Bevry Pty Ltd <us@bevry.me> (http://bevry.me)"]
    author: null

    # Maintainers
    # Can be an array or CSV string
    maintainers: ["Benjamin Lupton (b@lupton.cc) (http://bevry.me)"]
    maintainer: null

    # Sponsors
    # Can be an array or CSV string
    sponsors: ["Benjamin Lupton (b@lupton.cc) (http://bevry.me)"]

    # Contributors
    # Pulled in automatically from the GitHub Repository API and the GitHub Repository's `package.json` file
    contributors: null

    # Project's license details
    # Can be an array or CSV string
    license: "MIT"  # {type:"MIT", url:"http://..."}
    licenses: null

    # Project's repository details
    # If `repo` is set, or if `homepage` is a GitHub URL, we set this automatically
    repository:
        type: "git"
        url: "https://github.com/bevry/projectz.git"

    # Project's repository details
    # If `repo` is set, or if `homepage` is a GitHub URL, we set this automatically
    bugs:
        url: "https://github.com/bevry/projectz/issues"

    # Whether the project can run on the client-side in web browsers
    # If the component or bower package information is set, then this becomes true automatically
    browsers: true

    # Project's badges for use in the readme files
    badges:
        # Travis CI Badge
        # If not set, fallbacks to true if the `.travis.yml` file exists
        travis: true

        # NPM Version Badge
        # If not set, fallbacks to true if the `package.json` file exists
        npm: true

        # NPM Downloads Badge
        # If not set, fallbacks to true if the `package.json` file exists
        npmdownloads: true

        # David DM Dependency Badge
        # If not set, fallbacks to true if the `package.json` file exists
        # Will only run if dependencies is set
        david: true

        # David DM Dev Dependency Badge
        # If not set, fallbacks to the David DM Dependency Badge value
        # Will only run if dev dependencies is set
        daviddev: true

        # Waffle.io Badge
        # If a string is provided, that will be used as the GitHub issue queue
        # label. Otherwise, the label will default to "ready".
        waffleio: true

        # Coveralls.io Badge
        # If a string is provided, that will be used as the label for the badge.
        # Otherwise, the label will default to "Coverage Status".
        coveralls: true

        # Sauce Labs Browser Matrix Badge
        # If a string is provided, that will be used as the user id for the badge.
        saucebm: "user id"

        # Gratipay Badge
        gratipay: "balupton"

        # Flattr Badge
        flattr: "344188/balupton-on-Flattr"

        # Paypal Badge
        paypal: "QB8GQPZAH84N6"

        # BitCoin Badge
        bitcoin: "https://coinbase.com/checkouts/9ef59f5479eec1d97d63382c9ebcb93a"

        # Wishlist Badge
        wishlist: "http://amzn.com/w/2F8TXKSNAFG4V"

}
